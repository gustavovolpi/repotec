version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: repotec-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: repotec
      MYSQL_USER: repotec
      MYSQL_PASSWORD: repotec123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - repotec-network
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  frontend-builder:
    build:
      context: ./repotec-app
      dockerfile: Dockerfile
    container_name: repotec-frontend-builder
    volumes:
      - frontend_build:/app/dist
    command: sh -c "npm run build && ls -la /app/dist"

  backend:
    build:
      context: ./repotec-backend
      dockerfile: Dockerfile
    container_name: repotec-backend
    depends_on:
      mysql:
        condition: service_healthy
      frontend-builder:
        condition: service_completed_successfully
    env_file:
      - ./repotec-backend/.env
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=repotec
      - DATABASE_PASSWORD=repotec123
      - DATABASE_NAME=repotec
    ports:
      - "3000:3000"
    volumes:
      - frontend_build:/app/dist-frontend
      - uploads_data:/app/uploads
    networks:
      - repotec-network
    command: sh -c "sleep 10 && npm run migration:run && npm run start:prod"

volumes:
  mysql_data:
    name: repotec_mysql_data
  uploads_data:
    name: repotec_uploads_data
  frontend_build:
    name: repotec_frontend_build

networks:
  repotec-network:
    driver: bridge 